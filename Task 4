import java.io.*;
import java.util.*;
class Student 
{
    private String name;
    private int rollNumber;
    private String grade;
    public Student(String name, int rollNumber, String grade) {
        this.name = name;
        this.rollNumber = rollNumber;
        this.grade = grade;
    }
    public String getName() 
    {
        return name;
    }
    public int getRollNumber() 
    {
        return rollNumber;
    }
    public String getGrade()
    {
        return grade;
    }
    public void setName(String name) 
    {
        this.name = name;
    }
    public void setGrade(String grade) 
    {
        this.grade = grade;
    }
    @Override
    public String toString() {
        return "Name: " + name + ", Roll Number: " + rollNumber + ", Grade: " + grade;
    }
}
class StudentManagementSystem {
    private List<Student> students = new ArrayList<>();
    public void addStudent(Student student)
    {
        students.add(student);
    }
    public void removeStudent(int rollNumber) 
    {
        students.removeIf(student -> student.getRollNumber() == rollNumber);
    }
    public Student searchStudent(int rollNumber) 
    {
        return students.stream().filter(student -> student.getRollNumber() == rollNumber).findFirst().orElse(null);
    }
    public void displayStudents() 
    {
        students.forEach(System.out::println);
    }
    public void saveToFile(String fileName) throws IOException 
    {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fileName))) 
        {
            oos.writeObject(students);
        }
    }
    @SuppressWarnings("unchecked")
    public void loadFromFile(String fileName) throws IOException, ClassNotFoundException 
    {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName))) 
        {
            students = (List<Student>) ois.readObject();
        }
    }
}
public class StudentManagementApp 
{
    private static StudentManagementSystem sms = new StudentManagementSystem();
    private static Scanner sc = new Scanner(System.in);
    public static void main(String[] args)
    {
        try 
        {
            sms.loadFromFile("students.dat");
        } catch (Exception e) 
        {
            System.out.println("No previous data found.");
        }
        displayMenu();
    }
    private static void displayMenu() {
        while (true) {
            System.out.println("1. Add Student\n2. Remove Student\n3. Search Student\n4. Display All Students\n5. Save & Exit");
            switch (sc.nextInt()) {
                case 1 -> addStudent();
                case 2 -> removeStudent();
                case 3 -> searchStudent();
                case 4 -> sms.displayStudents();
                case 5 -> {
                    saveAndExit();
                    return;
                }
                default -> System.out.println("Invalid choice. Try again.");
            }
        }
    }
    private static void addStudent() {
        System.out.print("Enter name: ");
        String name = sc.next();
        System.out.print("Enter roll number: ");
        int rollNumber = sc.nextInt();
        System.out.print("Enter grade: ");
        String grade = sc.next();
        sms.addStudent(new Student(name, rollNumber, grade));
    }
    private static void removeStudent() 
    {
        System.out.print("Enter roll number to remove: ");
        int rollNumber = sc.nextInt();
        sms.removeStudent(rollNumber);
    }
    private static void searchStudent() {
        System.out.print("Enter roll number to search: ");
        int rollNumber = sc.nextInt();
        Student student = sms.searchStudent(rollNumber);
        System.out.println(student != null ? student : "Student not found.");
    }
    private static void saveAndExit()
    {
        try {
            sms.saveToFile("students.dat");
            System.out.println("Data saved successfully.");
        } catch (IOException e) {
            System.out.println("Error saving data.");
        }
    }
}
